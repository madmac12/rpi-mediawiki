# MediaWiki nginx server config

# See: https://www.mediawiki.org/wiki/Manual:Short_URL/Nginx

#server {
#     listen ${NGINX_HTTPS_PORT_NUMBER} http2 ssl;
#     server_name ${MEDIAWIKI_SERVER_NAME};
# 
#     # SSL Config
#     ssl_certificate /etc/nginx/ssl_cert_with_full_cert_chain.pem;
#     ssl_certificate_key /etc/nginx/ssl_private_key.pem;
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#     ssl_ciphers HIGH:!aNULL:!MD5;
# 
#     # Automatically redirect to HTTP
#     return 301 https://$host$request_uri;
#}
 
 # Nginx Non-SSL MediaWiki Server Config
 server {

    listen ${NGINX_HTTP_PORT_NUMBER};
    # server_name ${MEDIAWIKI_SERVER_NAME};
    client_max_body_size 50M;
    index index.php index.html index.htm;

    root /opt/mediawiki;

    # Be sure some other rule doesn't interfere with showing the error page.    
    location = /50x.html {
        root /var/www/html;
    }

    # Be sure some other rule doesn't interfere with robots.txt (in case there one is added)
    location = /robots.txt {
        root /var/www/html;
    }

    error_page 500 502 503 504 /50x.html;
    error_log /var/log/nginx/mediawiki.error.log;
    
    # error_log /var/log/nginx/mediawiki.error.log debug;
    # tail -f /var/log/nginx/mediawiki.error.log

    # All that is on this nginx host is the wiki, so kick requests
    # for the web root into the wiki path.
    location = / {
        return 301 $scheme://$http_Host/wiki;
    }
 
    location /wiki/images/deleted {
        # Deny access to deleted images folder
        deny all;
    }

    location ^~ /maintenance/ {
        # Deny direct requests for stuff in the maintenance folder
        deny all;
    }

    location ~ /\.ht {
        # Deny requests for web folder descriptors (if there are any)
        deny all;
    }

    # favicon root-to-wiki mapping
    location = /favicon.ico {
        alias /wiki/images/6/64/Favicon.ico;
        add_header Cache-Control "public";
        expires 7d;
    }
    
    # Match anything in the /wiki path against the document root and
    # Forward anything else to to the @rewrite rule to convert it into
    # a Page_Name request if possible.
    # Note: The .php rule should match before this if the request already
    # has index.php as its file-name.
    location /wiki/ {
        try_files $uri $uri/ @rewrite;
    }
    
    # Rewrite the /path/Page_Name url style to /path/index.php?title=Page_Name
    location @rewrite {
        rewrite ^/wiki/(.*)$ /wiki/index.php?title=$1&$args;
    }


    # It's annoying that MediaWiki can't be set up (reliably) in the root path,
    # but that's the way it is...
    # See: https://www.mediawiki.org/wiki/Manual:Wiki_in_site_root_directory
    # Handling for the article path (pretty URLs)
    location ~ \.php$ {
        fastcgi_pass  unix:/run/php/php7.0-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
        include /etc/nginx/fastcgi_params;
    }
 
 }